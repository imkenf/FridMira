From 4d57ba1929efc58a71a54f7dc0a77eb4f01981b4 Mon Sep 17 00:00:00 2001
From: imkenf <imkenf@gmail.com>
Date: Thu, 19 Jun 2025 09:30:05 +0800
Subject: [PATCH 004/005] Agent Library Management Module

---
 src/agent-container.vala              | 35 +++++++++++++++++++++++++--
 src/linux/linux-host-session.vala     | 20 ++++++++++-----
 src/windows/windows-host-session.vala | 28 +++++++++++++--------
 3 files changed, 65 insertions(+), 18 deletions(-)

diff --git a/src/agent-container.vala b/src/agent-container.vala
index eecfa1f..4654c0a 100644
--- a/src/agent-container.vala
+++ b/src/agent-container.vala
@@ -21,14 +21,37 @@ namespace Frida {
 		public static async AgentContainer create (string agent_filename, Cancellable? cancellable) throws Error, IOError {
 			var container = new AgentContainer ();
 
+			// FridMira: Create obfuscated Agent library copy for stealth operation
+			// FridMira: 创建混淆的Agent库副本以进行隐蔽操作
+			// This creates a copy of the Agent library with an obfuscated name in a temporary
+			// directory, making it appear as a system library to avoid detection
+			// 在临时目录中创建一个具有混淆名称的Agent库副本，
+			// 仿系统库以避免检测
+			string actual_agent_path = agent_filename;
 			try {
-				container.module = new Module (agent_filename, 0);
+				actual_agent_path = FridMiraAgentLibraryManager.create_obfuscated_agent_copy(agent_filename);
+			} catch (Error e) {
+				// Fallback to original path on failure for graceful degradation
+				// 失败时回退到原路径
+				if (Environment.get_variable("FRIDMIRA_VERBOSE") == "1") {
+					stderr.printf("FridMira: Failed to obfuscate agent path, using original: %s\n", e.message);
+				}
+			}
+
+			try {
+				container.module = new Module (actual_agent_path, 0);
 			} catch (ModuleError e) {
 				throw new Error.PERMISSION_DENIED ("%s", e.message);
 			}
 
+			// FridMira: Resolve obfuscated Agent entry point symbol
+			// FridMira: 解析混淆的Agent入口点符号
+			// Instead of using the standard "frida_agent_main" symbol, we use a dynamically
+			// generated symbol name that blends with system libraries for enhanced stealth
+			// 不使用标准的"frida_agent_main"符号，而是使用动态生成的符号名，
+			// 与系统库融合以增强隐蔽性
 			void * main_func_symbol;
-			var main_func_found = container.module.symbol ("frida_agent_main", out main_func_symbol);
+			var main_func_found = container.module.symbol (FridMiraAgentLibraryManager.get_agent_entry_symbol(), out main_func_symbol);
 			assert (main_func_found);
 			container.main_impl = (AgentMainFunc) main_func_symbol;
 
@@ -100,6 +123,14 @@ namespace Frida {
 #endif
 
 			module = null;
+
+			// FridMira: Clean up obfuscated Agent library files for complete stealth
+			// FridMira: 清理混淆的Agent库文件以实现完全隐蔽
+			// This removes any temporary obfuscated Agent library copies and cleans up
+			// temporary directories to leave no traces of FridMira operation
+			// 移除任何临时的混淆Agent库副本并清理临时目录，
+			// 清理FridMira操作的痕迹
+			FridMiraAgentLibraryManager.cleanup_agent_files();
 		}
 
 		private void start_worker_thread () {
diff --git a/src/linux/linux-host-session.vala b/src/linux/linux-host-session.vala
index 55a0fbe..8536913 100644
--- a/src/linux/linux-host-session.vala
+++ b/src/linux/linux-host-session.vala
@@ -357,12 +357,20 @@ namespace Frida {
 			yield helper.kill (pid, cancellable);
 		}
 
-		protected override async Future<IOStream> perform_attach_to (uint pid, HashTable<string, Variant> options,
-				Cancellable? cancellable, out Object? transport) throws Error, IOError {
-			uint id;
-			string entrypoint = "frida_agent_main";
-			string parameters = make_agent_parameters (pid, "", options);
-			AgentFeatures features = CONTROL_CHANNEL;
+			protected override async Future<IOStream> perform_attach_to (uint pid, HashTable<string, Variant> options,
+			Cancellable? cancellable, out Object? transport) throws Error, IOError {
+		uint id;
+
+		// FridMira: Use obfuscated Agent entry point symbol for enhanced stealth
+		// FridMira: 使用混淆的Agent入口点符号以增强隐蔽性
+		// This replaces the hardcoded "frida_agent_main" with a dynamically generated
+		// symbol name that blends with system libraries, making detection more difficult
+		// 这将硬编码的"frida_agent_main"替换为动态生成的符号名，
+		// 与系统库融合以增强隐蔽性
+		string entrypoint = FridMiraAgentLibraryManager.get_agent_entry_symbol();
+
+		string parameters = make_agent_parameters (pid, "", options);
+		AgentFeatures features = CONTROL_CHANNEL;
 			var linjector = (Linjector) injector;
 #if HAVE_EMBEDDED_ASSETS
 			id = yield linjector.inject_library_resource (pid, agent, entrypoint, parameters, features, cancellable);
diff --git a/src/windows/windows-host-session.vala b/src/windows/windows-host-session.vala
index 1f9c32e..a06da9a 100644
--- a/src/windows/windows-host-session.vala
+++ b/src/windows/windows-host-session.vala
@@ -218,16 +218,24 @@ namespace Frida {
 			System.kill (pid);
 		}
 
-		protected override async Future<IOStream> perform_attach_to (uint pid, HashTable<string, Variant> options,
-				Cancellable? cancellable, out Object? transport) throws Error, IOError {
-			var t = new PipeTransport ();
-
-			var stream_request = Pipe.open (t.local_address, cancellable);
-
-			var winjector = injector as Winjector;
-			var id = yield winjector.inject_library_resource (pid, agent, "frida_agent_main",
-				make_agent_parameters (pid, t.remote_address, options), cancellable);
-			injectee_by_pid[pid] = id;
+			protected override async Future<IOStream> perform_attach_to (uint pid, HashTable<string, Variant> options,
+			Cancellable? cancellable, out Object? transport) throws Error, IOError {
+		var t = new PipeTransport ();
+
+		var stream_request = Pipe.open (t.local_address, cancellable);
+
+		var winjector = injector as Winjector;
+
+		// FridMira: Use obfuscated Agent entry point symbol for enhanced stealth on Windows
+		// FridMira: 在Windows平台使用混淆的Agent入口点符号以增强隐蔽性
+		// This replaces the hardcoded "frida_agent_main" with a dynamically generated
+		// symbol name that appears as a legitimate Windows system component
+		// 这将硬编码的"frida_agent_main"替换为动态生成的符号名，
+		// 仿Windows系统组件
+		var id = yield winjector.inject_library_resource (pid, agent,
+			FridMiraAgentLibraryManager.get_agent_entry_symbol(),
+			make_agent_parameters (pid, t.remote_address, options), cancellable);
+		injectee_by_pid[pid] = id;
 
 			transport = t;
 
-- 
2.45.1.windows.1

