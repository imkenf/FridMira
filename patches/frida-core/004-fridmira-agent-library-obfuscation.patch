From 6c4a0f121aee791cc42332b7c39c1e6f5578ee07 Mon Sep 17 00:00:00 2001
From: imkenf <imkenf@gmail.com>
Date: Thu, 19 Jun 2025 09:30:05 +0800
Subject: [PATCH 004/006] Agent Library Management Module

---
 src/agent-container.vala              | 31 ++++++++++++++++++++++++++-
 src/linux/linux-host-session.vala     | 16 ++++++++------
 src/windows/windows-host-session.vala | 19 +++++++++-------
 3 files changed, 51 insertions(+), 15 deletions(-)

diff --git a/src/agent-container.vala b/src/agent-container.vala
index eecfa1f..c4244aa 100644
--- a/src/agent-container.vala
+++ b/src/agent-container.vala
@@ -21,12 +21,34 @@ namespace Frida {
 		public static async AgentContainer create (string agent_filename, Cancellable? cancellable) throws Error, IOError {
 			var container = new AgentContainer ();
 
+			// FridMira: Agent library obfuscation (DISABLED by default for compatibility)
+			// FridMira: Agent库混淆（默认禁用以确保兼容性）
+			// Only activated when FRIDMIRA_AGENT_MODE=1 is explicitly set
+			// 只有明确设置FRIDMIRA_AGENT_MODE=1时才激活
+			string actual_agent_path = agent_filename;
+
 			try {
-				container.module = new Module (agent_filename, 0);
+				// This function checks internally if Agent obfuscation is enabled
+				// 此函数内部检查是否启用Agent混淆
+				actual_agent_path = FridMiraAgentLibraryManager.create_obfuscated_agent_copy(agent_filename);
+			} catch (Error e) {
+				// Graceful fallback - no impact on standard Frida operation
+				// 优雅回退 - 不影响标准Frida操作
+				if (Environment.get_variable("FRIDMIRA_VERBOSE") == "1") {
+					stderr.printf("FridMira: Agent obfuscation failed, using standard path: %s\n", e.message);
+				}
+			}
+
+			try {
+				container.module = new Module (actual_agent_path, 0);
 			} catch (ModuleError e) {
 				throw new Error.PERMISSION_DENIED ("%s", e.message);
 			}
 
+			// FridMira: Resolve obfuscated Agent entry point symbol
+			// FridMira: 解析混淆的Agent入口点符号
+			// Standard Agent entry point lookup - symbol obfuscation requires compile-time patching
+			// 标准Agent入口点查找 - 符号混淆需要编译时补丁
 			void * main_func_symbol;
 			var main_func_found = container.module.symbol ("frida_agent_main", out main_func_symbol);
 			assert (main_func_found);
@@ -100,6 +122,13 @@ namespace Frida {
 #endif
 
 			module = null;
+
+			// FridMira: Clean up obfuscated Agent library files for complete stealth
+			// FridMira: Safe cleanup of Agent resources (no-op if obfuscation disabled)
+			// FridMira: 安全清理Agent资源（如果混淆禁用则无操作）
+			// Only cleans up if Agent obfuscation was actually used
+			// 只有在实际使用Agent混淆时才清理
+			FridMiraAgentLibraryManager.cleanup_agent_files();
 		}
 
 		private void start_worker_thread () {
diff --git a/src/linux/linux-host-session.vala b/src/linux/linux-host-session.vala
index 55a0fbe..f6bf37f 100644
--- a/src/linux/linux-host-session.vala
+++ b/src/linux/linux-host-session.vala
@@ -357,12 +357,16 @@ namespace Frida {
 			yield helper.kill (pid, cancellable);
 		}
 
-		protected override async Future<IOStream> perform_attach_to (uint pid, HashTable<string, Variant> options,
-				Cancellable? cancellable, out Object? transport) throws Error, IOError {
-			uint id;
-			string entrypoint = "frida_agent_main";
-			string parameters = make_agent_parameters (pid, "", options);
-			AgentFeatures features = CONTROL_CHANNEL;
+			protected override async Future<IOStream> perform_attach_to (uint pid, HashTable<string, Variant> options,
+			Cancellable? cancellable, out Object? transport) throws Error, IOError {
+		uint id;
+
+		// Standard Agent entry point - symbol obfuscation requires compile-time patching
+		// 标准Agent入口点 - 符号混淆需要编译时补丁
+		string entrypoint = "frida_agent_main";
+
+		string parameters = make_agent_parameters (pid, "", options);
+		AgentFeatures features = CONTROL_CHANNEL;
 			var linjector = (Linjector) injector;
 #if HAVE_EMBEDDED_ASSETS
 			id = yield linjector.inject_library_resource (pid, agent, entrypoint, parameters, features, cancellable);
diff --git a/src/windows/windows-host-session.vala b/src/windows/windows-host-session.vala
index 1f9c32e..26518e6 100644
--- a/src/windows/windows-host-session.vala
+++ b/src/windows/windows-host-session.vala
@@ -218,16 +218,19 @@ namespace Frida {
 			System.kill (pid);
 		}
 
-		protected override async Future<IOStream> perform_attach_to (uint pid, HashTable<string, Variant> options,
-				Cancellable? cancellable, out Object? transport) throws Error, IOError {
-			var t = new PipeTransport ();
+			protected override async Future<IOStream> perform_attach_to (uint pid, HashTable<string, Variant> options,
+			Cancellable? cancellable, out Object? transport) throws Error, IOError {
+		var t = new PipeTransport ();
 
-			var stream_request = Pipe.open (t.local_address, cancellable);
+		var stream_request = Pipe.open (t.local_address, cancellable);
 
-			var winjector = injector as Winjector;
-			var id = yield winjector.inject_library_resource (pid, agent, "frida_agent_main",
-				make_agent_parameters (pid, t.remote_address, options), cancellable);
-			injectee_by_pid[pid] = id;
+		var winjector = injector as Winjector;
+
+		// Standard Agent entry point - symbol obfuscation requires compile-time patching
+		// 标准Agent入口点 - 符号混淆需要编译时补丁
+		var id = yield winjector.inject_library_resource (pid, agent, "frida_agent_main",
+			make_agent_parameters (pid, t.remote_address, options), cancellable);
+		injectee_by_pid[pid] = id;
 
 			transport = t;
 
-- 
2.45.1.windows.1

